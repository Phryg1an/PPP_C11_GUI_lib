#include "Shape.h"

namespace Graph_lib {

	Shape::Shape() { }
	Shape::Shape(initializer_list<Point> lst)
		{
			for (Point p : lst) add(p);
		}  // add() the Points to this Shape

	//	Sha

	void Shape::draw_lines() const
	{
		if (color().visibility() && 1<points.size())	// draw sole pixel?
			for (unsigned int i=1; i<points.size(); ++i)
				fl_line(points[i-1].x,points[i-1].y,points[i].x,points[i].y);
	}

	void Shape::draw() const
	{
		Fl_Color oldc = fl_color();
		// there is no good portable way of retrieving the current style
		fl_color(lcolor.as_int());
		fl_line_style(ls.style(),ls.width());
		draw_lines();
		fl_color(oldc);	// reset color (to pevious) and style (to default)
		fl_line_style(0);
	}




	void Shape::move(int dx, int dy)
	{
		for (unsigned int i = 0; i<points.size(); ++i) {
			points[i].x+=dx;
			points[i].y+=dy;
		}
	}

}

